{\rtf1\ansi\ansicpg1252\cocoartf2622
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red0\green0\blue255;\red244\green244\blue244;
\red38\green38\blue38;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c0\c0\c100000;\cssrgb\c96471\c96471\c96471;
\cssrgb\c20000\c20000\c20000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid3\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww14200\viewh16880\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Kosta Dubovskiy\
APCS\
Mr. Mykolyk\
HW 36: Appendix D of Java Docs: Debugging\
11-18-2021\
\
\ul Notes:\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 \ulnone {\listtext	\uc0\u8226 	}Compile-time errors\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}Indicate that there is something wrong with the syntax of the program.\
{\listtext	\uc0\u8259 	}KtS: Incremental Development, increases success rate of error catching and locating\
{\listtext	\uc0\u8259 	}KtS: When compiler spews error messages, go through them one by one\'97compiling after each\'97starting from the first one\
{\listtext	\uc0\u8259 	}*KtS*(Extreme case): Debugging by bisection, cutting out half the code in a copy of the original file and running it to locate the source of the error.\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Run-time errors\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}Are produced if something goes wrong while the program is running.\
{\listtext	\uc0\u8259 	}Infinite loops or infinite recursions\
{\listtext	\uc0\u8259 	}KtS: Print statements for entering/exiting the loop\
\pard\tx1660\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2160\fi-2160\pardirnatural\partightenfactor0
\ls1\ilvl2\cf0 {\listtext	\uc0\u8259 	}If too overwhelming, simplify the code/print commands to make the outputs more concise and fewer in number\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}NullPointerException: Tried to invoke/access a null inst. var. or object.\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Logic errors\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}Cause the program to do the wrong thing.\
{\listtext	\uc0\u8259 	}No info. provided by compiler to help\'97this one\'92s on you\
{\listtext	\uc0\u8259 	}Common errors:\
\pard\tx1660\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2160\fi-2160\pardirnatural\partightenfactor0
\ls1\ilvl2\cf2 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
Remember that integer division always rounds toward zero. If you want fractions, use \cf3 \cb4 double\cf2 \cb1 . More generally, use integers for countable things and floating-point numbers for measurable things.\
\ls1\ilvl2\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
Floating-point numbers are only approximate, so don\'92t rely on them to be perfectly accurate. You should probably never use the \cf5 \cb4 ==\cf2 \cb1  operator with \cf3 \cb4 double\cf2 \cb1 \'92s. Instead of writing \cf3 \cb4 if\cf5 \'a0(d\'a0==\'a01.23)\cf2 \cb1 , do something like \cf3 \cb4 if\cf5 \'a0(Math.abs(d\'a0-\'a01.23)\'a0<\'a0.000001)\cf2 \cb1 .\
\ls1\ilvl2\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
When you apply the equality operator (\cf5 \cb4 ==\cf2 \cb1 ) to objects, it checks whether they are identical. If you meant to check equivalence, you should use the \cf5 \cb4 equals\cf2 \cb1  method instead.\
\ls1\ilvl2\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
By default for user-defined types, \cf5 \cb4 equals\cf2 \cb1  checks identity. If you want a different notion of equivalence, you have to override it.\
\ls1\ilvl2\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
Inheritance can lead to subtle logic errors, because you can run inherited code without realizing it.\cf0 \kerning1\expnd0\expndtw0 \ul \ulc0 \
}